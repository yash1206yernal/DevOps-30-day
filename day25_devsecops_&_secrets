# 🔐 Day 25 – DevSecOps & Secrets Management (Trivy + Vault)

This project is part of the **30-Day DevOps Mastery Plan**.  
On Day 25, we explored the integration of security in DevOps pipelines by:

- Scanning Docker images using **Trivy**
- Managing sensitive secrets using **HashiCorp Vault**
- (Optional) Encrypting files with **SOPS**

---

## 🎯 Objectives

- Understand DevSecOps and shift-left security principles
- Automate vulnerability scanning in CI/CD pipelines
- Securely store and retrieve secrets
- Explore secure GitOps using encrypted secrets

---

## 🧰 Tools Used

| Tool        | Purpose                                |
|-------------|----------------------------------------|
| Trivy       | Vulnerability scanner for Docker images |
| Vault       | Secure secrets storage and access       |
| Docker      | Local container runtime                 |
| SOPS (opt.) | Encrypt/decrypt config files            |

---

## 🧪 1. Vulnerability Scanning with Trivy
Run Trivy without installing (via Docker):

```bash
docker run --rm aquasec/trivy image nginx

  Sample Output:

scss

nginx (debian 11)
├── CVE-2023-1234 [HIGH] openssl
├── CVE-2024-5678 [MEDIUM] libxml2
...
You can scan your own images:

trivy image yourimage:tag

  🔐 2. Secrets Management with Vault
▶️ Start Vault in Dev Mode
bash

docker run -d --cap-add=IPC_LOCK \
  -e 'VAULT_DEV_ROOT_TOKEN_ID=myroot' \
  -e 'VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200' \
  -p 8200:8200 vault
➡️ Open: http://localhost:8200
Login token: myroot

  📦 Store a Secret
bash

export VAULT_ADDR='http://localhost:8200'
vault kv put secret/myapp username=admin password=supersecret
🔍 Read the Secret
bash

vault kv get secret/myapp

  🛡️ (Optional) SOPS – Secure File Encryption
bash

sops -e secrets.yaml > secrets.enc.yaml
sops -d secrets.enc.yaml
  
  🧹 Cleanup
bash

  
docker rm -f $(docker ps -q --filter ancestor=vault)
